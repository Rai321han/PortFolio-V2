"use client";

import { Geist, Geist_Mono, Amatic_SC } from "next/font/google";
import "./globals.css";
import Footer from "./components/Footer";
import { useState } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [showColors, setShowColors] = useState(false);
  const [theme, setTheme] = useState("blue");

  return (
    <html lang="en">
      <body
        className={`reltaive ${geistSans.variable} ${geistMono.variable} antialiased bg-background ${theme} overflow-x-hidden`}
      >
        <div className="relative">
          <div
            onClick={() => {
              setShowColors((prev) => !prev);
            }}
            className={`cursor-pointer p-1 ${
              showColors ? "opacity-100" : "opacity-40"
            }  hover:opacity-100 rounded-full bg-primary bottom-[10px] right-[10px] md:bottom-[50px] md:right-[50px] fixed z-[1000]`}
          >
            <svg
              className="w-[20px] h-[20px]"
              viewBox="0 0 199 200"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0 96C0 42.9807 42.9807 0 96 0V0V96H0V96Z"
                fill="#6BC7EC"
              />
              <path
                d="M199 104C199 157.019 156.019 200 103 200V200L103 104L199 104V104Z"
                fill="#E5A45E"
              />
              <path
                d="M103 -4.19629e-06C156.019 -1.87874e-06 199 42.9807 199 96V96L103 96L103 -4.19629e-06V-4.19629e-06Z"
                fill="#DE9CEC"
              />
              <path
                d="M96 200C42.9807 200 5.63623e-06 157.019 1.25889e-05 104V104L96 104L96 200V200Z"
                fill="#E06666"
              />
            </svg>
          </div>
          <div
            className={`z-[1000] mb-10 items-center justify-center ${
              showColors ? "flex" : "hidden"
            } flex-col gap-2 fixed bottom-[0px] right-[10px] md:bottom-[50px] md:right-[50px]`}
          >
            <div
              className=" text-white cursor-pointer"
              onClick={() => {
                setShowColors((prev) => !prev);
              }}
            >
              X
            </div>
            <div
              onClick={() => setTheme("purple")}
              className="w-[30px] h-[20px] bg-purple-500 hover:bg-purple-400  cursor-pointer"
            ></div>
            {/* <div
              onClick={() => setTheme("red")}
              className="w-[30px] h-[20px] bg-red-500 hover:bg-red-400 cursor-pointer"
            ></div> */}
            <div
              onClick={() => setTheme("blue")}
              className="w-[30px] h-[20px] bg-blue-500 hover:bg-blue-400 cursor-pointer"
            ></div>
            <div
              onClick={() => setTheme("orange")}
              className="w-[30px] h-[20px] bg-orange-500 hover:bg-orange-400 cursor-pointer"
            ></div>
            {/* <div
              onClick={() => setTheme("green")}
              className="w-[30px] h-[20px] bg-green-500 hover:bg-green-400 cursor-pointer"
            ></div> */}
          </div>
        </div>

        {children}
      </body>
    </html>
  );
}
