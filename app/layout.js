"use client";

import { Geist, Geist_Mono, Amatic_SC } from "next/font/google";
import "./globals.css";
import { motion, AnimatePresence } from "framer-motion";
import { useState } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const colors = {
  blue: {
    base: "bg-blue-500",
    hover: "hover:bg-blue-400",
  },
  orange: {
    base: "bg-orange-500",
    hover: "hover:bg-orange-400",
  },
  purple: {
    base: "bg-purple-500",
    hover: "hover:bg-purple-400",
  },
};

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [showColors, setShowColors] = useState(false);
  const [theme, setTheme] = useState("blue");

  return (
    <html lang="en">
      <body
        className={`reltaive ${geistSans.variable} ${geistMono.variable} antialiased bg-background ${theme} overflow-x-hidden`}
      >
        <div className="relative">
          <div
            onClick={() => {
              setShowColors((prev) => !prev);
            }}
            className={`cursor-pointer p-1 ${
              showColors ? "opacity-100" : "opacity-40"
            }  hover:opacity-100 rounded-full bg-primary bottom-[10px] right-[10px] md:bottom-[50px] md:right-[50px] fixed z-[1000]`}
          >
            <svg
              className="w-[20px] h-[20px]"
              viewBox="0 0 199 200"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0 96C0 42.9807 42.9807 0 96 0V0V96H0V96Z"
                fill="#6BC7EC"
              />
              <path
                d="M199 104C199 157.019 156.019 200 103 200V200L103 104L199 104V104Z"
                fill="#E5A45E"
              />
              <path
                d="M103 -4.19629e-06C156.019 -1.87874e-06 199 42.9807 199 96V96L103 96L103 -4.19629e-06V-4.19629e-06Z"
                fill="#DE9CEC"
              />
              <path
                d="M96 200C42.9807 200 5.63623e-06 157.019 1.25889e-05 104V104L96 104L96 200V200Z"
                fill="#E06666"
              />
            </svg>
          </div>
          <AnimatePresence>
            {showColors && (
              <motion.div
                key="color-picker"
                className="z-[1000] mb-10 items-center justify-center flex flex-col gap-2 fixed bottom-[0px] right-[10px] md:bottom-[50px] md:right-[50px]"
                initial={{ opacity: 0, y: 50 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: 10 }} // Animate down before removing
                transition={{ duration: 0.2 }}
              >
                <div
                  onClick={() => setShowColors(false)}
                  className="text-white cursor-pointer"
                >
                  X
                </div>

                {["blue", "orange", "purple"].map((item, index) => (
                  <motion.div
                    key={item}
                    onClick={() => setTheme(item)}
                    className={`w-[30px] h-[20px] ${colors[item].base} ${
                      theme === item && "border-2 border-white"
                    } ${colors[item].hover} cursor-pointer`}
                    variants={{
                      hidden: { opacity: 0, y: 20 },
                      visible: (i) => ({
                        opacity: 1,
                        y: 0,
                        transition: { duration: 0.3, delay: i * 0.2 },
                      }),
                    }}
                    initial="hidden"
                    animate="visible"
                    exit={{ opacity: 0, y: 20 }} // Animate out when closing
                    custom={index}
                  ></motion.div>
                ))}
              </motion.div>
            )}
          </AnimatePresence>
        </div>

        {children}
      </body>
    </html>
  );
}
